% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archive.R
\name{file_connections}
\alias{file_connections}
\alias{file_write}
\alias{file_read}
\title{Construct a connections for (possibly compressed) files.}
\usage{
file_write(file, filter = NULL, options = character())

file_read(file, mode = "r")
}
\arguments{
\item{file}{\code{character(1) || integer(1)} The filename within the archive,
specified either by filename or by position.}

\item{filter}{\code{character(1)} default: \code{NULL} The archive filter, one of \Sexpr[stage=render, results=rd]{archive:::choices_rd(names(archive:::archive_filters()))}.}

\item{options}{\code{character()} default: \code{character(0)} Options to pass to the filter or format.
options can have one of the following forms:
\itemize{
\item \code{option=value}
The option/value pair will be provided to every module.
Modules that do not accept an option with this name will
ignore it.
\item \code{option}
The option will be provided to every module with a value
of "1".
\item \code{!option}
The option will be provided to every module with a NULL
value.
\item \code{module:option=value}, \code{module:option}, \code{module:!option}
As above, but the corresponding option and value will be
provided only to modules whose name matches module.
}}

\item{mode}{\code{character(1)} A description of how to open the
connection (if it should be opened initially).  See section
‘Modes’ in \code{\link[base:connections]{base::connections()}} for possible values.}
}
\description{
These work similar to R's built-in \link{connections} for files and differ from
\link{archive_read} and \link{archive_write} because they do not use an archive
format, just use one or more of the filters.
}
\details{
\code{file_write()} returns an writable output connection,
\code{file_read()} returns a readable input connection.
}
\examples{
if (archive:::libarchive_version() > "3.2.0") {
# Write bzip2, base 64 encoded data
write.csv(mtcars, file_write("mtcars.bz2", c("uuencode", "bzip2")))

# Read it back
read.csv(file_read("mtcars.bz2"), row.names = 1, nrows = 3)
unlink("mtcars.bz2")
}
}
