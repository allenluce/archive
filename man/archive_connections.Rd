% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg.R
\name{archive_read}
\alias{archive_read}
\alias{archive_connections}
\alias{archive_write}
\title{Aquire a read or write connection to an archive file}
\usage{
archive_read(archive, file = 1L, mode = "r", format = NULL,
  filter = NULL)

archive_write(archive, file, format = NULL, filter = NULL)
}
\arguments{
\item{archive}{\code{character(1)} The archive filename or an \code{archive} object.}

\item{file}{\code{character(1) || integer(1)} The filename within the archive,
specified either by filename or by position.}

\item{format}{\code{character(1)} default: \code{NULL} The archive format, one of \Sexpr[stage=render, results=rd]{archive:::choices_rd(names(archive:::archive_formats()))}.}

\item{filter}{\code{character(1)} default: \code{NULL} The archive filter, one of \Sexpr[stage=render, results=rd]{archive:::choices_rd(names(archive:::archive_filters()))}.}
}
\description{
\code{archive_read()} returns an readable input connection to an existing archive.
\code{archive_write()} returns an writable output connection to a new archive.
}
\details{
If \code{format} and \code{filter} are \code{NULL}, they will be set automatically based on
the file extension given in \code{file} for \code{archive_write()} or automatically
detected using
\href{https://github.com/libarchive/libarchive/wiki/FormatDetection}{Robust automatic format detection}
for \code{archive_read()}.
}
\examples{
a <- archive(system.file(package = "archive", "extdata", "data.zip"))
# Show files in archive
a

# By default reads the first file in the archive.
read.csv(archive_read(a), nrows = 3)

# Can also specify a filename directly
read.csv(archive_read(a, "mtcars.csv"), nrows = 3)

# Or by position
read.csv(archive_read(a, 3), nrows = 3)

# Explicitly specify the format and filter if automatic detection fails.
read.csv(archive_read(a, format = "zip"), nrows = 3)
# Achive format and filters can be set automatically from the file extensions.
f1 <- tempfile(fileext = ".tar.gz")

write.csv(mtcars, archive_write(f1, "mtcars.csv"))
archive(f1)
unlink(f1)

# They can also be specified explicitly
f2 <- tempfile()
write.csv(iris, archive_write(f2, "iris.csv", format = "tar", filter = "bzip2"))
archive(f2)
unlink(f2)
}
