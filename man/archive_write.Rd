% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg.R
\name{archive_write}
\alias{archive_write}
\alias{archive_write_dir}
\title{Construct a write only connection to a new archive}
\usage{
archive_write(archive, file, format = NULL, filter = NULL)

archive_write_dir(archive, dir, ..., recursive = TRUE, full.names = FALSE)
}
\arguments{
\item{archive}{`character(1)` The archive filename.}

\item{file}{`character(1)` The filename within the archive.}

\item{format}{`character(1)` default: `NULL` The archive format, one of \Sexpr[stage=render, results=rd]{archive:::choices_rd(names(archive:::archive_formats()))}.}

\item{filter}{`character(1)` default: `NULL` The archive filter, one of \Sexpr[stage=render, results=rd]{archive:::choices_rd(names(archive:::archive_filters()))}.}

\item{dir}{The directory of files to add}

\item{...}{additional paramters passed to `base::dir`}

\item{recursive}{logical.  Should the listing recurse into directories?}

\item{full.names}{a logical value.  If \code{TRUE}, the directory
    path is prepended to the file names to give a relative file path.
    If \code{FALSE}, the file names (rather than paths) are returned.}
}
\description{
`archive_read()` returns an readable input connection to an existing archive.
`archive_write()` returns an writable output connection to a new archive.
}
\details{
If `format` and `filter` are `NULL`, they will be set automatically based on
the file extension given in `file`.
}
\examples{
# Achive format and filters can be set automatically from the file extensions.
f1 <- tempfile(fileext = ".tar.gz")

write.csv(mtcars, archive_write(f1, "mtcars.csv"))
archive(f1)
unlink(f1)

# They can also be specified explicitly
f2 <- tempfile()
write.csv(iris, archive_write(f2, "iris.csv", format = "tar", filter = "bzip2"))
archive(f2)
unlink(f2)
}
